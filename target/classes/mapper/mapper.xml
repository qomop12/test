<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.project.interpark">

	<!-- 전체조회, 페이징 -->
	<select id="selectAllMember" resultType="MemberDTO">
		select id, password, name, email, phone from (select rownum
		rNum, id,
		password, name, email, phone from member) where
		rNum between
		#{rowStart} and #{rowEnd}
	</select>

	<!-- 회원수 -->
	<select id="memberCount" resultType="int">
		select count(*)
		from member
	</select>

	<!-- 상세조회 -->
	<select id="selectMember" parameterType="MemberDTO"
		resultType="MemberDTO">
		select id, password, name, email, phone from member
		where id
		= #{id}
	</select>

	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="MemberDTO">
		insert into member (id,
		password, name, email, phone)
		values(#{id}, #{password}, #{name},
		#{email}, #{phone})
	</insert>

	<!-- 회원수정 -->
	<update id="updateMember" parameterType="MemberDTO">
		update member set
		password = #{password}, name = #{name}, email = #{email}, phone =
		#{phone}
		where id = #{id}
	</update>

	<!-- 회원탈퇴 -->
	<delete id="deleteMember" parameterType="MemberDTO">
		delete from member
		where
		id = #{id}
	</delete>

	<!-- 아이디 중복검사 -->
	<select id="idCheck" parameterType="MemberDTO" resultType="int">
		select count(*) from member
		where id = #{id}
	</select>

	<!-- 로그인 -->
	<select id="loginCheck" parameterType="MemberDTO"
		resultType="int">
		select count(*) from member
		where id = #{id} and password =
		#{password}
	</select>

	<!-- 전체조회 -->
	<select id="selectAllAddress" resultType="AddressDTO">
		select num,
		addressname, address, phone, id from address order by num desc
	</select>

	<!-- 상세조회 -->
	<select id="selectAddress" parameterType="AddressDTO"
		resultType="AddressDTO">
		select num, addressname, address, phone from address
		where
		num = #{num}
	</select>

	<!-- 배송지 추가 -->
	<insert id="insertAddress" parameterType="AddressDTO">
		insert into address
		(num, addressname, address, phone, id)
		values(add_seq.nextval,
		#{addressname}, #{address}, #{phone}, #{id})
	</insert>

	<!-- 배송지 수정 -->
	<update id="updateAddress" parameterType="AddressDTO">
		update address set
		addressname = #{addressname}, address = #{address}, phone = #{phone}
		where num = #{num}
	</update>

	<!-- 배송지 삭제 -->
	<delete id="deleteAddress" parameterType="AddressDTO">
		delete from address
		where num = #{num}
	</delete>

	<!-- 상품 전체조회 -->
	<select id="selectAllProduct" resultType="ProductDTO">
		select pronum,
		productname, price, category, id from product order by pronum desc
	</select>

	<!-- 상품 상세조회 -->
	<select id="selectProduct" parameterType="ProductDTO"
		resultType="ProductDTO">
		select pronum,
		productname, price, category, id from product
		where
		pronum = #{pronum}
	</select>

	<!-- 상품 추가 -->
	<insert id="insertProduct" parameterType="ProductDTO">
		insert into product
		(pronum, productname, price, category, id)
		values(pro_seq.nextval,
		#{productname}, #{price}, #{category}, #{id})
	</insert>

	<!-- 상품 수정 -->
	<update id="updateProduct" parameterType="ProductDTO">
		update product set
		productname = #{productname}, price = #{price}, category =
		#{category}, id = #{id}
		where pronum = #{pronum}
	</update>

	<!-- 상품 삭제 -->
	<delete id="deleteProduct" parameterType="ProductDTO">
		delete from product
		where pronum = #{pronum}
	</delete>

	<!-- 장바구니 전체조회 -->
	<select id="selectAllCart" resultType="CartDTO">
		select cartnum,
		quantity,
		id, pronum from cart order by cartnum desc
	</select>

	<!-- 장바구니 추가 -->
	<insert id="insertCart" parameterType="CartDTO">
		insert into cart
		(cartnum,
		quantity, id, pronum)
		values(cart_seq.nextval,
		#{quantity}, #{id},
		#{pronum})
	</insert>

	<!-- 장바구니 수정 -->
	<update id="updateCart" parameterType="CartDTO">
		update cart set
		quantity =
		#{quantity}
		where cartnum = #{cartnum}
	</update>

	<!-- 장바구니 삭제 -->
	<delete id="deleteCart" parameterType="CartDTO">
		delete from cart
		where
		cartnum = #{cartnum}
	</delete>
</mapper>